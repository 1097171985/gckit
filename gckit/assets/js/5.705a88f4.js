(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{170:function(v,_,e){"use strict";e.r(_);var t=e(0),a=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[v._v("#")]),v._v(" 配置")]),v._v(" "),e("blockquote",[e("p",[v._v("以下的配置字段大部分都是"),e("code",[v._v(".gckitconfig")]),v._v("文件中存在，可以通过直接修改"),e("code",[v._v(".gckitconfig")]),v._v("中对应的字段来实现修改配置，理论上"),e("code",[v._v("配置")]),v._v("中的所有字段都可以在自定义模板文件中使用的，这样大家可以非常灵活的实现自己特定的需要的")])]),v._v(" "),e("h2",{attrs:{id:"基本配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本配置","aria-hidden":"true"}},[v._v("#")]),v._v(" 基本配置")]),v._v(" "),e("h3",{attrs:{id:"organization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#organization","aria-hidden":"true"}},[v._v("#")]),v._v(" organization")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("string")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("'gckit'")])]),v._v(" "),e("p",[v._v("表示组织机构。")])])]),v._v(" "),e("h3",{attrs:{id:"author"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#author","aria-hidden":"true"}},[v._v("#")]),v._v(" author")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("string")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("'读取本机名称'")])]),v._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("p",[v._v("生成文件时头部的注释的"),e("code",[v._v("作者")]),v._v("名称显示。")])])])]),v._v(" "),e("h3",{attrs:{id:"preset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preset","aria-hidden":"true"}},[v._v("#")]),v._v(" preset")]),v._v(" "),e("ul",[e("li",[v._v("Type: "),e("code",[v._v("string")])]),v._v(" "),e("li",[v._v("Default: "),e("code",[v._v("'normal'")])])]),v._v(" "),e("p",[e("strong",[v._v("Gckit CLI")]),v._v("为同一文件类型提供了"),e("code",[v._v("5种")]),v._v("不同的模板类型，比如在自定义"),e("code",[v._v("Swift")]),v._v("的"),e("code",[v._v("Model")]),v._v("类型时你可以提前自定义"),e("code",[v._v("Struct")]),v._v("、"),e("code",[v._v("Class")]),v._v("或者"),e("code",[v._v("SwiftJSON")]),v._v("、"),e("code",[v._v("ObjcetMapper")]),v._v("等不同的模板种类，在生成的时候可以灵活选择。")]),v._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("blockquote",[e("p",[v._v("在执行文件生成之前，必须要实现对应类型的模板，以下代表的意思主要是针对"),e("code",[v._v("iOS")]),v._v("下"),e("code",[v._v("ViewController")]),v._v("的生成的时候，其它情况下就可以代表不同的模板种类了")])]),v._v(" "),e("p",[e("code",[v._v("normal")]),v._v(": 系统生成")]),v._v(" "),e("p",[e("code",[v._v("common")]),v._v(": 简单的自定义方法")]),v._v(" "),e("p",[e("code",[v._v("inherit")]),v._v(": 继承父类、导入依赖名")]),v._v(" "),e("p",[e("code",[v._v("all")]),v._v(": 全量生成")])]),v._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list","aria-hidden":"true"}},[v._v("#")]),v._v(" list")]),v._v(" "),e("ul",[e("li",[v._v("Type: "),e("code",[v._v("string")])]),v._v(" "),e("li",[v._v("Default: "),e("code",[v._v("'none'")])])]),v._v(" "),e("p",[v._v("指定生成文件的列表类型，该字段主要是针对"),e("strong",[v._v("iOS")]),v._v("中生成"),e("code",[v._v("ViewController")]),v._v("类型时选择是否使用列表类型以及列表的种类("),e("code",[v._v("UITableView")]),v._v(" 或者 "),e("code",[v._v("UICollectionView")]),v._v(")")]),v._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("p",[e("code",[v._v("none")]),v._v(": 无列表")]),v._v(" "),e("p",[e("code",[v._v("tv")]),v._v(": "),e("code",[v._v("UITableView")])]),v._v(" "),e("p",[e("code",[v._v("cv")]),v._v(": "),e("code",[v._v("UICollectionView")])])]),v._v(" "),e("h3",{attrs:{id:"force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force","aria-hidden":"true"}},[v._v("#")]),v._v(" force")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("boolean")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("false")])]),v._v(" "),e("p",[v._v("默认情况下，当生成文件时，如果已经存在则就不会覆盖。当然你可以将"),e("code",[v._v("force")]),v._v("设置为"),e("code",[v._v("true")]),v._v("表示强制覆盖。")])])]),v._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),e("p",[v._v("该字段是针对普通文件类型有效，如果文件类型的"),e("code",[v._v("isProject")]),v._v("为"),e("strong",[v._v("true")]),v._v("时(表示生成的文件类型为项目级别的)当"),e("code",[v._v("force")]),v._v("设置为"),e("code",[v._v("true")]),v._v("也不会强制覆盖，而是会弹出询问是否强制覆盖的")])]),v._v(" "),e("h3",{attrs:{id:"isdeep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isdeep","aria-hidden":"true"}},[v._v("#")]),v._v(" isDeep")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("boolean")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("true")])]),v._v(" "),e("p",[v._v("表示生成"),e("code",[v._v("Model")]),v._v("类型时，是否需要根据"),e("code",[v._v("JSON")]),v._v("文件的不同层级分别生成"),e("code",[v._v("Model")]),v._v("，默认为"),e("code",[v._v("true")]),v._v("，表示生成不同层级的"),e("code",[v._v("Model")]),v._v("，否则生成最顶级的"),e("code",[v._v("Model")]),v._v("。")])])]),v._v(" "),e("h3",{attrs:{id:"tempjpath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tempjpath","aria-hidden":"true"}},[v._v("#")]),v._v(" tempJPath")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("string")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("tempJson")])]),v._v(" "),e("p",[v._v("表示生成文件时，读取"),e("code",[v._v("JSON")]),v._v("文件的相对文件夹路径名称。")])])]),v._v(" "),e("h3",{attrs:{id:"mainpath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mainpath","aria-hidden":"true"}},[v._v("#")]),v._v(" mainPath")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("string")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("Main")])]),v._v(" "),e("p",[v._v("表示生成文件时，生成的文件相对于当前的路径，默认为"),e("code",[v._v("Main")]),v._v("文件夹，不过可以通过配置时输入"),e("code",[v._v("空格")]),v._v("实现生成的文件为当前目录，另外如果是与 CocoaPods 组件化配合使用，则默认会设置为"),e("code",[v._v("Classes")]),v._v("文件夹。")])])]),v._v(" "),e("h3",{attrs:{id:"gtypes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gtypes","aria-hidden":"true"}},[v._v("#")]),v._v(" gTypes")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("Array")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v('[ "viewcontroller", "viewmodel", "model", "cell", "api", "router", "core" ]')])]),v._v(" "),e("p",[v._v("改字段是在执行"),e("code",[v._v("一键生成")]),v._v("(即:在执行生成文件时没有指定要生成的文件类型，默认会生成对应哪几种类型)。")])])]),v._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("注意")]),v._v(" "),e("p",[v._v("该字段的配置需要与语言字段"),e("strong",[v._v("lang")]),v._v("一定要配合使用，例如该字默认表示:"),e("code",[v._v("Swift")]),v._v("语言下执行"),e("code",[v._v("一键生成")]),v._v("时会分别生成:"),e("code",[v._v("viewcontroller")]),v._v("、 "),e("code",[v._v("viewmodel")]),v._v("、 "),e("code",[v._v("model")]),v._v("、 "),e("code",[v._v("cell")]),v._v("、 "),e("code",[v._v("api")]),v._v("、 "),e("code",[v._v("router")]),v._v("、 "),e("code",[v._v("core")]),v._v("，这些模板类型只有在"),e("code",[v._v("Swift")]),v._v("语言下才是有效的。")])]),v._v(" "),e("h3",{attrs:{id:"prefix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prefix","aria-hidden":"true"}},[v._v("#")]),v._v(" prefix")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("string")])])]),v._v(" "),e("li",[e("p",[v._v("Default: ``")]),v._v(" "),e("p",[v._v("表示生成文件名称需要增加的前缀，该字段大部分情况下是不需要配置的，只有"),e("code",[v._v("lang")]),v._v("为"),e("code",[v._v("Objective-C")]),v._v("(没有命名空间)时才会配置改字段(🤪OC 特有)")])])]),v._v(" "),e("h2",{attrs:{id:"文件类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件类型","aria-hidden":"true"}},[v._v("#")]),v._v(" 文件类型")]),v._v(" "),e("h3",{attrs:{id:"gtype-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gtype-path","aria-hidden":"true"}},[v._v("#")]),v._v(" gType.path")]),v._v(" "),e("ul",[e("li",[v._v("Type: "),e("code",[v._v("String")])]),v._v(" "),e("li",[v._v("Default: "),e("code",[v._v("对应类型")])])]),v._v(" "),e("p",[v._v("表示对应类型的相对路径，生成的每种类型都独立到各自的文件夹下以保证方便管理。")]),v._v(" "),e("h3",{attrs:{id:"gtype-suffix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gtype-suffix","aria-hidden":"true"}},[v._v("#")]),v._v(" gType.suffix")]),v._v(" "),e("ul",[e("li",[v._v("Type: "),e("code",[v._v("String")])]),v._v(" "),e("li",[v._v("Default: "),e("code",[v._v("_对应类型的缩写")]),v._v("（一种约定）")])]),v._v(" "),e("p",[v._v("通过输入的"),e("code",[v._v("Name")]),v._v("名称然后再加上文件类型的"),e("code",[v._v("suffix")]),v._v("即可生成对应类型的名称了。")]),v._v(" "),e("h3",{attrs:{id:"gtype-isproject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gtype-isproject","aria-hidden":"true"}},[v._v("#")]),v._v(" gType.isProject")]),v._v(" "),e("ul",[e("li",[v._v("Type: "),e("code",[v._v("boolean")])]),v._v(" "),e("li",[v._v("Default: "),e("code",[v._v("false")])])]),v._v(" "),e("p",[v._v("表示该类型是否为项目级别，如果是项目级别的"),e("code",[v._v("文件名称")]),v._v("不会根据输入的"),e("code",[v._v("Name")]),v._v("生成而是根据"),e("code",[v._v("项目的名称")]),v._v("加上文件类型的"),e("code",[v._v("suffix")]),v._v("所生成。")]),v._v(" "),e("h3",{attrs:{id:"cgtypes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cgtypes","aria-hidden":"true"}},[v._v("#")]),v._v(" cGTypes")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("Array")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("[]")])]),v._v(" "),e("p",[v._v("用于缓存用户自定义配置的文件类型，包含的子字段有:")]),v._v(" "),e("ul",[e("li",[v._v("gType:表示自定义类型名称")]),v._v(" "),e("li",[v._v("path:对应类型的相对路径")]),v._v(" "),e("li",[v._v("suffix:对应类型的后缀")]),v._v(" "),e("li",[v._v("isProject:表示对应类型是否为项目级别")])])])]),v._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("p",[v._v("用户可以通过下面命令进行自定义文件类型，该字段就是用于缓存用户自定义的文件类型")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("$ gckit c -g\n")])])])]),v._v(" "),e("h2",{attrs:{id:"语言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语言","aria-hidden":"true"}},[v._v("#")]),v._v(" 语言")]),v._v(" "),e("h3",{attrs:{id:"lang"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lang","aria-hidden":"true"}},[v._v("#")]),v._v(" lang")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("string")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("swift")])]),v._v(" "),e("p",[v._v("表示生成文件的语言。"),e("code",[v._v("lang")]),v._v("需要与生成类型"),e("code",[v._v("gTypes")]),v._v("对应")])])]),v._v(" "),e("h3",{attrs:{id:"clanglist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clanglist","aria-hidden":"true"}},[v._v("#")]),v._v(" cLangList")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Type: "),e("code",[v._v("Array")])])]),v._v(" "),e("li",[e("p",[v._v("Default: "),e("code",[v._v("[]")])]),v._v(" "),e("p",[v._v("用于缓存用户自定义配置的语言列表，包含的子字段有:")]),v._v(" "),e("ul",[e("li",[v._v("lang:语言的名称")]),v._v(" "),e("li",[v._v("ext:语言对应文件的格式")]),v._v(" "),e("li",[v._v("hasPrefix:是否包含前缀")]),v._v(" "),e("li",[v._v("types:表示语言的数据类型用于生成对应的"),e("code",[v._v("Model")]),v._v("的时候需要")]),v._v(" "),e("li",[v._v("crossPlatform:是否是跨平台语言(跨平台考虑区别大小写问题文件名为小写下划线的形式，否则大写)")])])])]),v._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[v._v("提示")]),v._v(" "),e("p",[v._v("用户可以通过下面命令进行自定义语言，该字段就是用于缓存用户自定义的语言列表")]),v._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[v._v("$ gckit c -l\n")])])])])])}],!1,null,null,null);a.options.__file="README.md";_.default=a.exports}}]);